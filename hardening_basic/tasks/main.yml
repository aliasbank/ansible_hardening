---
# tasks file for hardening_basic

#- set_fact: 
#    VM_flag="{{lookup('pipe','dmidecode -s system-manufacturer') }}"

- name: Hardening basico
  block:
  - debug:
      msg: "Se crea el hardening basico del SO"

#Bloque para la creacion de usuarios y grupos de operaciones(administradores)
  - name: Creacion de grupo y usuarios
    block:
    - debug:
       msg: "Bloque para la creacion de usuarios"

# Creacion de  usuarios y grupos
    - name: Crea grupo sysadmins
      group:
        name: sysadmins
        gid: 300
      tags:
        - create_sysadmins_group
    - debug:
        msg: "Se crea el grupo de sysadmins"

# Creacion de grupos
    - name:
      group:
         name: "{{ item.grupo }}"
         gid: "{{ item.uid }}"
      with_items: 
          - "{{ usuarios_grupos }}"
      tags:
        - create_ope_group 
    - debug:
        msg: "Se crean los grupos basicos para operaciones"

# Creacion de usuarios de operciones con el password temporal123
    - debug:
        msg: "Se va crear el usuario  {{ item.usuario }} "
        verbosity: 3
      with_items:
         - "{{ usuarios_grupos }}"

    - name: Crea los usuarios basicos
      user:
        name: "{{ item.usuario }}"
        shell: /bin/bash
        uid: "{{ item.uid }}"
        group: "{{ item.grupo }}"
        groups: sysadmins
        password: $6$LGWciU4b2txiX25Z$KRx3/8Cv3t.IKmm2r8lAHYr.ulJTpHB2v3d5Ln//.RvCGZsMXI8cP0UcTI1fdUrcM7IjiR84suOOIWoLlVop81
        create_home: True
      with_items: '{{ usuarios_grupos }}'
      tags:
        - create_user
    - debug:
        msg: "Se crean los usuarios basicos"

# Bloque para la instalacion de paquetes basicos para el hardening
  - name: Instalacion de paquetes basicos
    block:
    - debug:
       msg: "Bloque de instalacion de paquetes"

# Instalaci√≥n de paquetes
    - name: Instalacion de paquetes
      yum:
        name: "{{ item.name }}"
        state: present
      with_items:
        - "{{ paquete }}"
      tags:
        - install_packages 
    - debug:
       msg: "Se instalaron los paquetes"

# Bloque para colocar las sudoers
  - name: Creacion de sudoer para el usuario de ansible
    block:
    - debug:
       msg: "Bloque de reglas de sudoers basico"

    - debug:
        msg: "Se coloca la regla de sudoer  {{ item.file }} "
        verbosity: 3
      with_items:
         - "{{ sudoers }}"

# Se coloca reglas de sudoer para los usuarios ansible, app_care y el grupo sysadmins
    - name: Se coloca configuracion de sudoers
      template:
         src: "{{ item.file }}"
         dest: "{{ item.dest }}"
         owner: root
         mode: 0444
         validate: /sbin/visudo -c -f %s
      with_items:
          - "{{ sudoers }}"
      tags:
        - sudoers
    - debug:
       msg: "Se coloca el sudoers basico"

# Bloque para colocar la configuracion basica de software
  - name: Configuracion basica de software
    block:
    - debug:
       msg: "Bloque de configuraciones "

    - name: Configuracion de servicios
      template:
         src: "{{ item.file }}"
         dest: "{{ item.dest }}"
         owner: root
         mode: 0444
      with_items:
         - "{{ configuracion_archivos }}"
      tags:
        - services
    - debug:
         msg: "Se configura los demonios basicos"

    - name: Inciando demonios
      systemd:
         name: "{{ item.name }}"
         state: "{{ item.state }}"
         masked: "{{ item.mask }}"
         enabled: "{{ item.enable }}"
      with_items:
         - "{{ demonios }}"
      tags:
        - start_demons
    - debug:
        msg: "Se iniciaron los servicios basicos"

# Instalacion de splunk
  - name: Instlacion del cliente de splunk
    block:
    - debug:
        msg: "Inica bloque para instalar splunk "
      
    #- name: Copia software de splunk al servidor splunkforwarder
    #  copy:
    #    src: hardening_basic/files/splunkforwarder-8.0.0-1357bef0a7f6-Linux-x86_64.tgz
    #    dest: /opt/
    #  tags:
    #    - spluk_copy
    #  - debug:
    #      msg: "Se copia software de splunk"

    - name: Descomprime el software de splunk
      unarchive:    
         src: hardening_basic/files/splunkforwarder-8.0.0-1357bef0a7f6-Linux-x86_64.tgz
         dest: /opt/
      tags:
        - splunk_unzip
    - debug:
        msg: "Se descomprime splunk en /opt"
    
    - name: Se crea comando splunk por medio de alternatives
      alternatives:
        name: splunk
        link: /bin/splunk
        path: /opt/splunkforwarder/bin/splunk
      tags:
       - splunk_alternatives
    - debug:
       msg: "Se crea comando de splunk por medio de alternatives, para habilitar el demonio se debe aceptar la licencia de splunk"
    
    #- name: Se crea demonio de arranque de splunk
    #  shell: source /root/.bashrc && splunk enable boot-start 
    #  tags:
    #    - splunk_deamon
    #- debug:
    #     msg: "Se crea demonio de arranque"  

# re-configure grub for virtual machines 
  - name: Configuracion de grub para kvm
    block:
    - debug:
       msg: "Inicia bloque para configurar el grub de una maquina virtual en KVM"

    - name: Tipo de equipo
      shell: dmidecode -s system-manufacturer
      register: VM_flag

    - name: Aregar acceso por consola desde virsh
      script: hardening_basic/files/VM_grub.sh
      tags: 
        - grub_KV;
      when: VM_flag.stdout.find('QEMU') != -1
    - debug:
        msg: "Se agrega la configuracion para el acceso desde terminal a la consola de KVM"


# Disable SELinux
  - name: Deshabilitando SELinux
    block:
    - debug:
       msg: "Bloque para deshabilitar SELinux "

    - name: Quitando SELinux
      lineinfile:
         path: /etc/selinux/config
         regexp: '^SELINUX='
         line: SELINUX=disabled
      tags:
        - disable_selinux
    - debug:
        msg: "Se deshabilito SELinux"

# Reinicio de los hosts
  - name: Reinicio de servidores
    block:
    - debug:
         msg: "Se reiniciara el hosts {{ ansible_fqdn }} "

    - name: Reinicio de servidor
      reboot: